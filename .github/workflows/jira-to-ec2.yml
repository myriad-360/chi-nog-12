name: Poll Jira & Send Artifact to EC2

on:
  schedule:
    - cron: '*/5 * * * *'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  poll-and-push:
    runs-on: ubuntu-latest

    steps:
      # 1) Grab your code & set up Python
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: pip install requests python-dotenv

      # 2) Poll Jira & write JSON to artifacts/
      - name: Poll Jira into JSON
        env:
          JIRA_EMAIL:   ${{ secrets.JIRA_EMAIL }}
          JIRA_TOKEN:   ${{ secrets.JIRA_TOKEN }}
          JIRA_PROJECT: ${{ vars.JIRA_PROJECT }}
          JIRA_STATUS:  ${{ vars.JIRA_STATUS }}
          JIRA_SITE:    ${{ vars.JIRA_SITE }}
        run: |
          mkdir -p artifacts
          python jira/jira_polling_script.py

      # 3) Look up your EC2’s public IP by Name tag
      - name: Get EC2 public IP
        id: ec2_ip
        run: |
          ip=$(aws ec2 describe-instances \
            --region ${{ vars.AWS_REGION }} \
            --filters \
              "Name=tag:Name,Values=${{ vars.EC2_INSTANCE_NAME }}" \
              "Name=instance-state-name,Values=running" \
            --query "Reservations[0].Instances[0].PublicIpAddress" \
            --output text)
          echo "ip=$ip" >> $GITHUB_OUTPUT

      # 4) Drop your SSH key onto the runner
      - name: Set up SSH key
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > key.pem
          chmod 600 key.pem

      # 5) Copy the artifact via scp
      - name: Copy artifact to EC2
        run: |
          # pick the first JSON file
          shopt -s nullglob
          files=(artifacts/*.json)
          ART="${files[0]}"
          if [[ -z "$ART" ]]; then
            echo "❌ No JSON artifact to send" >&2
            exit 1
          fi

          echo "▶ scp $ART to ${{ secrets.EC2_USER }}@${{ steps.ec2_ip.outputs.ip }}:/tmp/"
          scp -o StrictHostKeyChecking=no -i key.pem "$ART" \
            ${{ secrets.EC2_USER }}@${{ steps.ec2_ip.outputs.ip }}:/tmp/

      # 6) SSH in and print the file
      - name: SSH & print artifact
        run: |
          BASENAME=$(basename artifacts/*.json)
          echo "▶ ssh in and cat /tmp/$BASENAME"
          ssh -o StrictHostKeyChecking=no -i key.pem \
            ${{ secrets.EC2_USER }}@${{ steps.ec2_ip.outputs.ip }} \
            "cat /tmp/$BASENAME"