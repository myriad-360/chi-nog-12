name: Run Ansible Hello World on EC2

on:
  workflow_dispatch:

jobs:
  run-ansible:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up SSH key
      run: |
        echo "${{ secrets.EC2_SSH_KEY }}" > key.pem
        chmod 600 key.pem

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ vars.AWS_REGION }}

    - name: Get GitHub runner's public IP
      id: ip
      run: echo "ip=$(curl -s https://api.ipify.org)" >> "$GITHUB_OUTPUT"

    - name: Get VPC ID by Name tag
      id: vpc
      run: |
        vpc_id=$(aws ec2 describe-vpcs \
          --filters "Name=tag:Name,Values=chi-nog-12-pa" \
          --query "Vpcs[0].VpcId" \
          --output text)
        echo "id=$vpc_id" >> "$GITHUB_OUTPUT"

    - name: Get SG ID from VPC
      id: sg
      run: |
        sg_id=$(aws ec2 describe-security-groups \
          --filters "Name=group-name,Values=nautobot-sg" "Name=vpc-id,Values=${{ steps.vpc.outputs.id }}" \
          --query "SecurityGroups[0].GroupId" \
          --output text)
        echo "id=$sg_id" >> "$GITHUB_OUTPUT"

    - name: Authorize SSH from runner IP
      run: |
        aws ec2 authorize-security-group-ingress \
          --group-id ${{ steps.sg.outputs.id }} \
          --protocol tcp \
          --port 22 \
          --cidr ${{ steps.ip.outputs.ip }}/32 \
          --region ${{ vars.AWS_REGION }} || true

    - name: Run Ansible playbook remotely
      run: |
        ansible-playbook ansible/ansible-hello-world-via-actions.yml \
          -i "${{ vars.EC2_HOST }}," \
          --user ${{ secrets.EC2_USER }} \
          --private-key key.pem \
          -e "ansible_python_interpreter=/usr/bin/python3"